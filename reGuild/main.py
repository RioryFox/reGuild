if __name__ == "__main__":

    #-------------Work with system
    import os
    import sys

    #-------------Work with timers and math
    import time
    import math
    import multiprocessing
    import datetime

    #-------------Work with strings
    import string

    #-------------Work with save data
    import sqlite3
    import json
    import logging
    
    #------------Data string/html/css analise
    import re 
    import Levenshtein
    from bs4 import BeautifulSoup

    #------------Work with Ethernet
    import requests
    import vk_api
    from vk_api.longpoll import VkLongPoll, VkEventType

    #-------------My libraries
    from func import *
    from config import *
    from db_work import *
    from frame_work import filter_events
    from networkwork import *

else:

    raise Exception("\x1b[34mThis is main file, not a library!")
#-------------------------------------------------------------
class MyLongPoll(VkLongPoll):

    def listen(self):

        while True:

            try:

                for event in self.check():

                    yield event

            except Exception as error:

                print(f"–ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä–∞–º –í–ö - {error}\n")
                result = 0

                while result != 200:

                    try:
                        result = requests.get("https://yandex.ru").status_code

                    except Exception:
                        continue

                print("\n--\x1b[32mC–ænnection\x1b[m--\n")
                my_session = vk_api.VkApi(token=my_token)
                my_api = my_session.get_api()
                self.__init__(my_session)
                continue

#-------------------------------------------------------------

#–ó–∞–≥—Ä—É–∑–∫–∞ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –≤–∫ –æ—Ç –∏–º–µ–Ω–∏ —á–µ–ª–æ–≤–µ–∫–∞
#~~~~~~~~~~~~~~~~~
my_session = vk_api.VkApi(token=my_token)
my_api = my_session.get_api()
long_pool = MyLongPoll(vk=my_session)
my_id = my_api.users.get()[0]["id"]
my_send = False

#–ó–∞–≥—Ä—É–∑–∫–∞ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –≤–∫ –æ—Ç –∏–º–µ–Ω–∏ –≥—Ä—É–ø–ø—ã
#~~~~~~~~~~~~~~~~~
guild_session = vk_api.VkApi(token=guild_token)
guild_api = guild_session.get_api()
guild_send = False

#-------------------------------------------------------------

#"–°—Ç—ç–∫–∏"
#~~~~~~~~~~~~~~~~~
chats_events = []
users_events = []

#–ó–∞–ø—É—Å–∫ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏
#~~~~~~~~~~~~~~~~~
creat_tables(my_id)
#get_global_prices()
#send_msg(my_session, "chat", my_chat_id, "–º–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
all_items = get_all_items()
all_items = [item for sublist in all_items['data'] for item in sublist]


#-------------------------------------------------------------


while True:
    print('sycle')

    #–£—á–∞—Å—Ç–æ–∫ –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–±—ã—Ç–∏–π, –µ—Å–ª–∏ –Ω–∞–º –≤–∞–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–∫–æ–µ-—Ç–æ —Å–æ–±—ã—Ç–∏–µ, —Ç–æ –º—ã —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ —Å—Ç—ç–∫
    #~~~~~~~~~~~~~~~~~
    filter = filter_events(long_pool, my_api)
    chats_events = filter["chats"]
    users_events = filter["users"]
    guild_msg = ""
    my_msg = ""
    guild_send = False
    my_send = False

    #–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π –∏–∑ —á–∞—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º—ã —É–∂–µ –æ—Ç–æ–±—Ä–∞–ª–∏ –∏ —Å—á–∏—Ç–∞–µ–º –≤–∞–∂–Ω—ã–º–∏
    #~~~~~~~~~~~~~~~~~
    while len(chats_events) > 0 and not (guild_send or my_send):
        result = {"process": "#chats_events", "sucsess": True, "error": None, "data": None}

        try:

            #–í—ã–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
            #~~~~~~~~~~~~~~~~~
            (chat_id, user_id, msg, my_msg_id, api_event, my_send, guild_send) = chats_events[0]

            try:
                user_data = my_api.users.get(user_ids=[user_id])[0]
            except Exception as error:
                user_data = None

            my_msg_id = api_event.message_id
            litle_msg = msg.lower()

            #–£—á–∞—Å—Ç–æ–∫ –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ —Ä–µ–∫—Ü–∏—é –Ω–∞ —Å–æ–±—ã—Ç–∏–µ –∏–∑ —á–∞—Ç–∞
            #~~~~~~~~~~~~~~~~~
            if chat_id == my_chat_id:

                if litle_msg == "–ø–∏–Ω–≥":
                    print(guild_msg)
                    guild_msg = "–ü–æ–Ω–≥!"
                    
                elif user_id == -183040898:
                    if ", –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å:" in litle_msg:

                        info = read_profile(msg)
                        user_id = info["data"]["userid"]
                        user_data = my_api.users.get(user_ids=[user_id])[0]
                        old_data = sql_sget("main_base\\users.db", "profile", {"userid" : user_id})

                        if old_data["data"] is None:
                            new_data = sql_sget("main_base\\users.db", "profile", info["data"], check=True)
                            guild_msg = "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ..."

                        else:  
                            old_data = old_data["data"]
                            new_data = sql_update("main_base\\users.db", "profile", info["data"])['data'][0]

                            guild_msg += f" üåê[id{user_id}|{user_data['first_name']}] –¥–æ {new_data[6]+1} –£—Ä–æ–≤–Ω—è: "
                            guild_msg += f"\nüñêÔ∏è+üëä: {new_data[6]*6+90} ‚ù§Ô∏è: {new_data[6]*3+45}"
                            guild_msg += f"\nüëä: {new_data[7]-old_data[7]} "
                            guild_msg += f"üñêÔ∏è: {new_data[8]-old_data[8]} "
                            guild_msg += f"‚ù§Ô∏è: {new_data[9]-old_data[9]} "
                            guild_msg += f"üíÄ: {new_data[6]-old_data[6]}"
                elif litle_msg.startswith('—á–∏—Å—Ç—ã–º–∏ '):
                    guild_msg = '–ù–µ –≤–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å'
                    if re.findall(r'—á–∏—Å—Ç—ã–º–∏ –æ (\d+)', litle_msg):
                        guild_msg = str(math.ceil(int(re.findall(r'—á–∏—Å—Ç—ã–º–∏ –æ (\d+)', litle_msg)[0])/0.95))
                        guild_msg = f"{guild_msg} –æ—Å–∫–æ–ª–∫–æ–≤"
                    elif re.findall(r'—á–∏—Å—Ç—ã–º–∏ (\d+)', litle_msg):
                        guild_msg =str(math.ceil(int(re.findall(r'—á–∏—Å—Ç—ã–º–∏ (\d+)', litle_msg)[0])/0.9))
                        guild_msg = f"{guild_msg} –∑–æ–ª–æ—Ç–∞"
                elif litle_msg.startswith('–≥—Ä—è–∑–Ω—ã–º–∏ '):
                    guild_msg = '–ù–µ –≤–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å'
                    if re.findall(r'–≥—Ä—è–∑–Ω—ã–º–∏ –æ (\d+)', litle_msg):
                        guild_msg = re.findall(r'–≥—Ä—è–∑–Ω—ã–º–∏ –æ (\d+)', litle_msg)[0]
                    elif re.findall(r'–≥—Ä—è–∑–Ω—ã–º–∏ (\d+)', litle_msg):
                        guild_msg = re.findall(r'–≥—Ä—è–∑–Ω—ã–º–∏ (\d+)', litle_msg)[0]
                elif litle_msg == "–º–æ–µ –ø–∏–≤–æ":
                    data = sql_sget("main_base\\users.db", "users", {"userid" :user_id}, check=True)["data"][2]
                    guild_msg = f'–£ –≤–∞—Å –¥–µ–Ω–µ–≥ –Ω–∞ –ø–∏–≤–æ {data}'
                    #~~~~~~~~~~~~~~~~~
                elif litle_msg.startswith('—Ü–µ–Ω–∞ '):
                    print(175)
                    item = litle_msg[5:].lower()
                    if item not in all_items:
                        item = give_chance(item, all_items)
                        print(item)
                    guild_msg = "–Ø –Ω–µ –Ω–∞—à–µ–ª —Ç–∞–∫–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞!"
                    if item is not None:
                        result = sql_sget("main_base\\items.db", "items", {'smalname' : item})
                        if result['data'] is not None:
                            guild_msg = str(result['data'])
                    
                else:
                    guild_send = False 

            else:

                if user_id == -183040898:
                    if ", –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å:" in litle_msg:

                        info = read_profile(msg)
                        user_id = info["data"]["userid"]
                        user_data = my_api.users.get(user_ids=[user_id])[0]
                        old_data = sql_sget("main_base\\users.db", "profile", {"userid" : user_id})

                        if old_data["data"] is None:
                            new_data = sql_sget("main_base\\users.db", "profile", info["data"], check=True)
                            guild_msg = "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ..."

                        else:
                            old_data = old_data["data"]
                            new_data = sql_update("main_base\\users.db", "profile", info["data"])['data'][0]

            #–£—á–∞—Å—Ç–æ–∫ –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ —Ä–µ–∞–∫—Ü–∏—é —á–µ–ª–æ–≤–µ–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ –∏–∑ —á–∞—Ç–∞
            #~~~~~~~~~~~~~~~~~
            if chat_id == my_chat_id:
                if litle_msg == "–ø–∏–Ω–≥":
                    my_msg = "–ü–æ–Ω–≥!"
                else:
                    my_send = False

            if my_send:
                result['data'] = guild_msg

        except Exception as error:

            result["sucsess"] = False
            result["error"] = error

        log_and_print(result, False)
        #–û—á–∏—Å—Ç–∫–∞
        #~~~~~~~~~~~~~~~~~
        chats_events.remove(chats_events[0])

    

    #–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã—Ö –º—ã —Å—á–∏—Ç–µ–º –≤–∞–∂–Ω—ã–º–∏ 
    #~~~~~~~~~~~~~~~~~
    while len(users_events) > 0 and not (guild_send or my_send):
        result = {"process": "#users_events", "sucsess": True, "error": None, "data": None}

        try:
            #–í—ã–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
            #~~~~~~~~~~~~~~~~~
            (my_chat_id, text, my_msg_id, api_event, my_send, guild_send) = users_events[0]

            #–£—á–∞—Å—Ç–æ–∫ –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ —Ä–µ–∞–∫—Ü–∏—é —á–µ–ª–æ–≤–µ–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ
            #~~~~~~~~~~~~~~~~~
            _ = None

        except Exception as error:
            result["sucsess"] = False
            result["error"] = error

        log_and_print(result, True)
        #–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
        #~~~~~~~~~~~~~~~~~
        _ = None

        #–û—á–∏—Å—Ç–∫–∞
        #~~~~~~~~~~~~~~~~~
        users_events.remove(users_events[0])

    #–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    #~~~~~~~~~~~~~~~~~
    if guild_send and len(guild_msg) > 0:

        guild_msg_id = search_txt_in_msg(guild_api, msg, guild_chat_id, user_id, int(api_event.datetime.timestamp()))

        if guild_msg_id["sucsess"]:
            guild_msg_id = guild_msg_id["data"]["id"]
        else:
            guild_msg_id = None

        send_msg(guild_session, "chat", guild_chat_id, guild_msg, reply_to=guild_msg_id)
        guild_send = False

    if my_send and len(my_msg) > 0:

        send_msg(my_session, "chat", my_chat_id, my_msg, reply_to=my_msg_id)
        my_send = False

    #—Å—Ç—Ä–∞—Ö–æ–≤–∫–∞
    users_events = []
    chats_events = []